@page "/meals/editor"

@inject FoodService FoodService
@inject MealService MealService

<div class="container-lg vh-100 d-flex flex-column">
    <EditForm Model="meal" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator/>
        <div class="row">
            <div class="">
                <div class="col-5 mb-3">
                    <label for="name" class="form-label">Name</label>
                    <InputText @bind-Value="meal.Name" id="name" class="form-control"/>
                    <ValidationMessage For="() => meal.Name"/>
                </div>
                <div class="col-5 mb-3">
                    <label for="date" class="form-label">Date</label>
                    <InputDate @bind-Value="meal.Date" id="date" class="form-control"/>
                </div>
                <div class="mb-3">
                    <InputRadioGroup Name="meal-type" @bind-Value="meal.MealType">
                        <span>
                            <InputRadio Value="MealType.Breakfast" id="breakfast"/>
                            <label for="breakfast">
                                <img alt="Breakfast" src="images/icons/icons8-breakfast-96.png" class="food-icon"/>
                            </label>
                        </span>
                        <span>
                            <InputRadio Value="MealType.Lunch" id="lunch"/>
                            <label for="lunch">
                                <img alt="Lunch" src="images/icons/icons8-lunch-96.png" class="food-icon"/>
                            </label>
                        </span>
                        <span>
                            <InputRadio Value="MealType.Dinner" id="dinner"/>
                            <label for="dinner">
                                <img alt="Dinner" src="images/icons/icons8-dinner-96.png" class="food-icon"/>
                            </label>
                        </span>
                        <span>
                            <InputRadio Value="MealType.Snack" id="snack"/>
                            <label for="snack">
                                <img alt="Snack" src="images/icons/icons8-snack-96.png" class="food-icon"/>
                            </label>
                        </span>
                    </InputRadioGroup>
                </div>
            </div>
        </div>

        <div class="gap-5 row flex-grow-1 mb-3">
            <div class="col-5">
                <div class="bg-light row row-cols-5">
                    @foreach (var food in foods)
                    {
                        <div class="col">
                            <button class="btn" type="button" @onclick="() => AddFoodToMeal(food)">
                                <img alt="@food.Name" src="images/icons/@food.Icon" class="food-icon"/>
                                <span class="text-muted">@food.Name</span>
                            </button>
                        </div>
                    }
                </div>
            </div>
            <div class="col-5">
                <div class="bg-light row row-cols-5">
                    @foreach (var food in meal.Foods)
                    {
                        <div class="col">
                            <button class="btn" type="button" @onclick="() => RemoveFoodFromMeal(food)">
                                <img alt="@food.Name" src="images/icons/@food.Icon" class="food-icon"/>
                                <span class="text-muted">@food.Name</span>
                            </button>
                        </div>
                    }
                </div>
                <div class="mt-3 text-end">
                    <button class="btn btn-success">Submit</button>
                </div>
            </div>
        </div>
    </EditForm>
</div>

@code {
    List<Food> foods = [];
    Meal meal = new();

    protected override async Task OnInitializedAsync()
    {
        foods = await FoodService.GetAllFoodsAsync();
    }

    private void AddFoodToMeal(Food food)
    {
        meal.Foods.Add(food);
    }

    private void RemoveFoodFromMeal(Food food)
    {
        meal.Foods.Remove(food);
    }

    private async Task HandleSubmit()
    {
        await MealService.AddMeal(new Meal { Name = meal.Name, Date = meal.Date, Foods = meal.Foods, MealType = meal.MealType});
    }
}