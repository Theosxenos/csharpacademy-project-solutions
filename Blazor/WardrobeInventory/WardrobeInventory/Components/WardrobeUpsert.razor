@using WardrobeInventory.Models
@using WardrobeInventory.Services

@inject ImageService ImageService
@inject WardrobeService WardrobeService

<div class="modal fade" id="wardrobeUpsertModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        @* <h1 class="modal-title fs-5" id="exampleModalLabel">New message</h1> *@
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <EditForm Model="wardrobeItem" OnValidSubmit="HandleFormSubmit">
        <div class="modal-body">
          <div class="mb-3">
            <label for="ItemName" class="col-form-label">Name:</label>
            <InputText @bind-Value="wardrobeItem.Name" id="ItemName" class="form-control"/>
          </div>
          <div class="mb-3">
            <label for="ItemBrand" class="col-form-label">Brand:</label>
            <InputText @bind-Value="wardrobeItem.Brand" id="ItemBrand" class="form-control"/>
          </div>
          <div class="mb-3">
            <label for="ItemCategory" class="col-form-label">Category:</label>
            <InputSelect @bind-Value="wardrobeItem.Category" id="ItemCategory" class="form-select">
              <option disabled="">Please select a category</option>
              @foreach (var category in Enum.GetValues<Category>())
              {
                <option value="@category">@category</option>
              }
            </InputSelect>
          </div>
          <div class="mb-3">
            <label for="ItemSize" class="col-form-label">Size:</label>
            <InputSelect TValue="Size" @bind-Value="wardrobeItem.Size" id="ItemSize" class="form-select">
              <option disabled="">Please select a size</option>
              @foreach (var size in Enum.GetValues<Size>())
              {
                <option value="@size">@size</option>
              }
            </InputSelect>
          </div>
          <div class="mb-3">
            <label for="ItemName" class="col-form-label">Image:</label>
            <InputFile accept=".jpg,.jpeg,.png,.webp" class="form-control" OnChange="LoadFile" ></InputFile>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Send message</button>
        </div>
      </EditForm>
    </div>
  </div>
</div>


@code {
  [Parameter] public int? Id { get; set; }
  [Parameter] public Func<Task>? FormSubmitted { get; set; }

  private IBrowserFile? image;
  private WardrobeItem wardrobeItem;

  protected override async Task OnParametersSetAsync()
  {
    if (Id.HasValue)
    {
      wardrobeItem = await WardrobeService.GetItemByIdAsync(Id.Value);
    }
    else
    {
      wardrobeItem = new();
    }

    image = null;
  }

  private async Task LoadFile(InputFileChangeEventArgs obj)
  {
    image = obj.File;
  }

  private async Task HandleFormSubmit()
  {
    if(image != null)
      wardrobeItem.ImageData = await ImageService.ConvertImageToBytes(image);

    if (!Id.HasValue)
    {
      await WardrobeService.AddItemAsync(wardrobeItem);
    }
    else
    {
      await WardrobeService.UpdateItemAsync(wardrobeItem);
    }

    FormSubmitted?.Invoke();
  }

}