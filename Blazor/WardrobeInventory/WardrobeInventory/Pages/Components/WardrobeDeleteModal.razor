@using WardrobeInventory.Services
@using WardrobeInventory.Models

@inject WardrobeService WardrobeService

<div id="wardrobeDeleteModal" class="modal fade">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete @item.Name?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="HandleDelete">Delete</button>
      </div>
    </div>
  </div>
</div>

@code {
  [Parameter] public int? WardrobeId { get; set; }
  [Parameter] public Func<Task>? ItemDeleted { get; set; }

  private WardrobeItem item = new();

  protected override async Task OnParametersSetAsync()
  {
    if(WardrobeId == null)
      return;

    item = await WardrobeService.GetItemByIdAsync(WardrobeId.Value);
  }

  private async Task HandleDelete()
  {
    await WardrobeService.DeleteItem(WardrobeId.Value);
    ItemDeleted?.Invoke();
  }

}